version: '3.8'

services:

  db:
    env_file:
      - .env
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always

  backend:
    image: m00nrock/foodgram:latest
    restart: always
    depends_on:
      - db
    volumes:
      - static_value:/app/staticfiles/
      - media_value:/app/media/
    env_file:
      - .env

  frontend:
    image: m00nrock/foodgram_front:latest
    volumes:
      - result_build:/app/result_build/build/
    depends_on:
      - backend

  nginx:
    image: nginx:1.21.3-alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - result_build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/staticfiles/
      - media_value:/var/html/media/
    depends_on:
      - backend
  
  grafana:
    image: grafana/grafana:8.5.3-ubuntu
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-configs:/etc/grafana
  
  prometheus:
    image: prom/prometheus:v2.36.0
    ports:
      - "9090:9090"
    volumes:
      - prom-data:/prometheus
      - prom-configs:/etc/prometheus
  
  node-exporter:
    image: prom/node-exporter:v1.3.1
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'

volumes:
  result_build:
  postgres_data:
  static_value:
  media_value:
  grafana-data:
  grafana-configs:
  prom-data:
  prom-configs:
